use crate::{Address, BlockId, OperationId, Slot};
use serde::{Deserialize, Serialize};
use std::collections::VecDeque;

#[derive(Debug, Clone, Serialize, Deserialize)]
/// By product of a byte code execution
pub struct SCOutputEvent {
    /// context generated by the execution context
    pub context: EventExecutionContext,
    /// json data string
    pub data: String,
}
/// Context of the event (not generated by the user)
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct EventExecutionContext {
    /// when was it generated
    pub slot: Slot,
    /// block id if there was a block at that slot
    pub block: Option<BlockId>,
    /// if the event was generated during a read only execution
    pub read_only: bool,
    /// index of the event in the slot
    pub index_in_slot: u64,
    /// most recent at the end
    pub call_stack: VecDeque<Address>,
    /// original operation ID, if any
    pub origin_operation_id: Option<OperationId>,
}
